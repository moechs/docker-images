user  www;
worker_processes 1;

error_log /var/log/nginx/error.log notice;
pid /run/nginx/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server_tokens                   off;
    sendfile                        on;
    tcp_nopush                      on;
    tcp_nodelay                     on;
    reset_timedout_connection       on;
    send_timeout                    60s;
    keepalive_timeout               75s;
    keepalive_requests              1000;
    map_hash_bucket_size            64;
    server_names_hash_bucket_size   512;
    client_max_body_size            4g;
    client_body_timeout             60s;
    client_header_timeout           60s;
    client_header_buffer_size       32k;
    large_client_header_buffers     4 256k;
    client_body_buffer_size         128K;
    types_hash_max_size             2048;
    open_file_cache_errors          on;
    open_file_cache                 max=65535 inactive=60s;
    open_file_cache_valid           30s;
    open_file_cache_min_uses        2;
    variables_hash_max_size         4096;
    variables_hash_bucket_size      128;
    underscores_in_headers          on;
    ignore_invalid_headers          on;
    http2_max_concurrent_streams    8192;

    resolver 119.29.29 223.5.5.5 valid=300s ipv6=off;
    resolver_timeout 4s;

    ldap_server ldap_server {
      # user search base.
      url "ldap://localhost/OU=Offices,DC=company,DC=com?sAMAccountName?sub?(objectClass=person)";
      # bind as
      binddn "CN=Operator,OU=Service Accounts,DC=company,DC=com";
      # bind pw
      binddn_passwd <PUT Operator's PASSWORD HERE>;
      # group attribute name which contains member object
      group_attribute member;
      # search for full DN in member object
      group_attribute_is_dn on;
      # matching algorithm (any / all)
      satisfy any;
      # list of allowed groups
      require group "CN=Admins,OU=My Security Groups,DC=company,DC=com";
      require group "CN=New York Users,OU=My Security Groups,DC=company,DC=com";
      # list of allowed users
      # require 'valid_user' cannot be used together with 'user' as valid user is a superset
      # require valid_user;
      require user "CN=Batman,OU=Users,OU=New York Office,OU=Offices,DC=company,DC=com";
      require user "CN=Robocop,OU=Users,OU=New York Office,OU=Offices,DC=company,DC=com";
    }

    server {
      listen 80;
      server_name  _;
      charset utf-8;

      root /data/web/;

      location /healthz {
        access_log off;
        default_type text/plain;
        return 200 "";
      }

      location / {
        auth_ldap "Forbidden";
        auth_ldap_servers ldap_server;
        try_files $uri /index.html;
      }
  }
}
